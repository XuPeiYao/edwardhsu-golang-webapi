definitions:
  models.User:
    properties:
      eid:
        type: string
      profile:
        $ref: '#/definitions/models.UserProfile'
      status:
        type: string
      uid:
        type: integer
    type: object
  models.UserProfile:
    properties:
      contact_address:
        type: string
      contact_cellphone:
        type: string
      contact_telephone:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/user:
    post:
      parameters:
      - description: New user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new User
      tags:
      - User
    put:
      parameters:
      - description: Update user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update User
      tags:
      - User
  /api/user/{uid}:
    get:
      parameters:
      - description: User UID
        in: path
        name: uid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Find User by UID
      tags:
      - User
swagger: "2.0"
